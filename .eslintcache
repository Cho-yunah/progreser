[{"/Users/apple/Desktop/progreser/src/index.js":"1","/Users/apple/Desktop/progreser/src/reportWebVitals.js":"2","/Users/apple/Desktop/progreser/src/App.js":"3","/Users/apple/Desktop/progreser/src/modules/root.js":"4","/Users/apple/Desktop/progreser/src/components/Signup.jsx":"5","/Users/apple/Desktop/progreser/src/components/Routine.jsx":"6","/Users/apple/Desktop/progreser/src/modules/userSign.js":"7","/Users/apple/Desktop/progreser/src/modules/user.js":"8","/Users/apple/Desktop/progreser/src/modules/services/AuthService.js":"9","/Users/apple/Desktop/progreser/src/components/Login.jsx":"10","/Users/apple/Desktop/progreser/src/containers/SignContainer.jsx":"11","/Users/apple/Desktop/progreser/src/containers/LoginContainer.jsx":"12","/Users/apple/Desktop/progreser/src/components/NewRoutine.jsx":"13","/Users/apple/Desktop/progreser/src/containers/NewRoutineContainer.jsx":"14","/Users/apple/Desktop/progreser/src/modules/newRoutine.js":"15","/Users/apple/Desktop/progreser/src/ModalPortal/MyModal/MyModal.jsx":"16","/Users/apple/Desktop/progreser/src/ModalPortal/MyModal/components/Modalloaders.jsx":"17"},{"size":550,"mtime":1610977114112,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610348284098,"results":"20","hashOfConfig":"19"},{"size":2186,"mtime":1611195474103,"results":"21","hashOfConfig":"19"},{"size":600,"mtime":1611128332533,"results":"22","hashOfConfig":"19"},{"size":2884,"mtime":1611157532996,"results":"23","hashOfConfig":"19"},{"size":1854,"mtime":1611140266359,"results":"24","hashOfConfig":"19"},{"size":1419,"mtime":1611050181047,"results":"25","hashOfConfig":"19"},{"size":1438,"mtime":1611140266361,"results":"26","hashOfConfig":"19"},{"size":209,"mtime":1611152380245,"results":"27","hashOfConfig":"19"},{"size":1021,"mtime":1611032217288,"results":"28","hashOfConfig":"19"},{"size":354,"mtime":1611050181046,"results":"29","hashOfConfig":"19"},{"size":361,"mtime":1611140266359,"results":"30","hashOfConfig":"19"},{"size":4151,"mtime":1611140335496,"results":"31","hashOfConfig":"19"},{"size":568,"mtime":1611108570749,"results":"32","hashOfConfig":"19"},{"size":1169,"mtime":1611117107873,"results":"33","hashOfConfig":"19"},{"size":491,"mtime":1611195451610,"results":"34","hashOfConfig":"19"},{"size":207,"mtime":1611193698356,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1rt3g2u",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/apple/Desktop/progreser/src/index.js",["75","76","77"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n// // import { createStore } from 'redux';\n// import { Provider } from 'react-redux';\n// const store = createStore();\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n",["78","79"],"/Users/apple/Desktop/progreser/src/reportWebVitals.js",[],"/Users/apple/Desktop/progreser/src/App.js",["80","81","82","83"],"/Users/apple/Desktop/progreser/src/modules/root.js",[],"/Users/apple/Desktop/progreser/src/components/Signup.jsx",["84"],"import React, { useCallback, useRef, useState } from 'react';\nimport MyModal from '../ModalPortal/MyModal/MyModal';\nimport userService from '../modules/services/AuthService';\nimport './Signup.scss';\n\nexport default function Signup({ onSign }) {\n  const id = useRef();\n  const pass = useRef();\n  const repass = useRef();\n  const name = useRef();\n  const failid = useRef();\n  const formData = useRef();\n  const [checked, setChecked] = useState(false);\n  const [passState, setPass] = useState('');\n  const Submit = useCallback(\n    e => {\n      e.preventDefault();\n      const obj = {};\n      const formData = new FormData(e.target);\n      for (let [key, value] of formData.entries()) {\n        obj[key] = value;\n      }\n      console.log(obj);\n      onSign(obj);\n    },\n    [onSign],\n  );\n  const click = async e => {\n    e.preventDefault();\n    console.log(id.current.value);\n    const userId = await userService.getUser(id.current.value);\n    console.log(userId);\n    if (userId.length) {\n      console.log('중복');\n      setChecked(true);\n    } else {\n      setChecked(false);\n    }\n    console.log(checked);\n  };\n  const passChange = () => {\n    if (pass.current.value === repass.current.value) {\n      setPass(false);\n    } else {\n      setPass(true);\n    }\n    console.log(passState);\n  };\n\n  return (\n    <div className=\"Signup\">\n      <h1>만나서 반가워요!</h1>\n      <p>알찬 하루를 보낼 준비가 됐나요?</p>\n      <form onSubmit={Submit} ref={formData}>\n        <div>\n          <label htmlFor=\"user-id\" ref={failid}>\n            이메일\n          </label>\n          <input type=\"email\" required name=\"user-id\" ref={id} />\n          <button onClick={click}>중복 확인</button>\n        </div>\n        <div>\n          <label htmlFor=\"user-pass\">비밀번호</label>\n          <input type=\"password\" required name=\"user-pass\" ref={pass} />\n        </div>\n        <div>\n          <label htmlFor=\"user-repass\">비밀번호</label>\n          <input type=\"password\" required name=\"user-repass\" onChange={passChange} ref={repass} />\n          {passState && '비밀번호가 다릅니다.'}\n        </div>\n        <div>\n          <label htmlFor=\"user-name\">이름</label>\n          <input type=\"text\" required name=\"user-name\" ref={name} />\n        </div>\n        <div>\n          <label>성별</label>\n          <ul className=\"gender-list\">\n            <li>남</li>\n            <li>녀</li>\n          </ul>\n        </div>\n        <div>\n          <label htmlFor=\"user-birth\">생년월일</label>\n          <input type=\"text\" required name=\"user-birth\" />\n        </div>\n        <div class=\"check-div\">\n          <input type=\"checkbox\" name=\"user-ok\" />\n          <span>마이루틴의 이용약관과 개인정 취급방식에 동의합니다.</span>\n        </div>\n        <button type=\"submit\">하루 관리 시작하기</button>\n      </form>\n    </div>\n  );\n}\n","/Users/apple/Desktop/progreser/src/components/Routine.jsx",["85","86"],"import { useEffect, useState } from 'react';\nimport { BsPlus } from 'react-icons/bs';\nimport './Routine.scss';\nimport { MdAccessTime } from 'react-icons/md';\nimport { GiHistogram } from 'react-icons/gi';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { FiMoreHorizontal } from 'react-icons/fi';\nimport Moment from 'react-moment';\nimport 'moment/locale/ko';\nimport moment from 'moment';\n// const todos = [{id: 1, message: }];\n\nconst Lilist = () => {\n  const [state, setState] = useState([\n    { id: 1, message: '아침 루트\u001d', firsttime: '9:15am', lasttime: '9:16am' },\n    { id: 2, message: '밥먹기\u001d', firsttime: '0:00am', lasttime: '' },\n  ]);\n  console.log(state);\n  return state.map(todo => {\n    return (\n      <li className=\"Routine-list\">\n        {todo.message}\n        <time>\n          {todo.firsttime} {todo.lasttime && '~'} {todo.lasttime}\n        </time>\n        <button>\n          <FiMoreHorizontal />\n        </button>\n      </li>\n    );\n  });\n};\n\nconst Routine = () => {\n  console.log(moment().format());\n\n  return (\n    <div className=\"Routine\">\n      <div className=\"header\">\n        <time>\n          <Moment interval={1000} format=\"M.DD (dd) hh:mm A\" />\n        </time>\n        <h1>평온한 오후입니다.</h1>\n      </div>\n      <ul className=\"section\">\n        <Lilist />\n      </ul>\n      <div className=\"plus\">\n        <button>\n          <BsPlus />\n        </button>\n      </div>\n      <nav className=\"navigation\">\n        <ul>\n          <li>\n            <button>\n              <MdAccessTime />\n            </button>\n          </li>\n          <li>\n            <button>\n              <GiHistogram />\n            </button>\n          </li>\n          <li>\n            <button>\n              <BsFillPersonFill />\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Routine;\n","/Users/apple/Desktop/progreser/src/modules/userSign.js",[],"/Users/apple/Desktop/progreser/src/modules/user.js",[],"/Users/apple/Desktop/progreser/src/modules/services/AuthService.js",[],"/Users/apple/Desktop/progreser/src/components/Login.jsx",[],"/Users/apple/Desktop/progreser/src/containers/SignContainer.jsx",[],"/Users/apple/Desktop/progreser/src/containers/LoginContainer.jsx",[],"/Users/apple/Desktop/progreser/src/components/NewRoutine.jsx",["87","88","89","90","91","92"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport './NewRoutine.scss';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Checkbox, Switch, Select, TimePicker } from 'antd';\nimport { IoIosArrowRoundForward } from 'react-icons/io';\nimport date from 'date-and-time';\n\nconst NewRoutine = ({ onRoutine }) => {\n  const form = useRef();\n  const audio = useRef();\n\n  const [alarm, setAlarm] = useState('');\n\n  let message = '1번 울리기';\n  const [state, setState] = useState(message);\n\n  const format = 'HH:mm';\n\n  const options = [\n    { label: '일', value: '일' },\n    { label: '월', value: '월' },\n    { label: '화', value: '화' },\n    { label: '수', value: '수' },\n    { label: '목', value: '목' },\n    { label: '금', value: '금' },\n    { label: '토', value: '토' },\n  ];\n\n  const onAlarmChange = alarm => {\n    setAlarm(alarm);\n    audio.current.src = `./audio/${alarm}.mp3`;\n    audio.current.play();\n  };\n\n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      const formdata = new FormData(form.current);\n      const routine = {};\n      for (let [key, value] of formdata.entries()) {\n        routine[key] = value;\n      }\n      console.log(routine);\n      onRoutine(routine);\n    },\n    [onRoutine],\n  );\n\n  function onChange(checked) {\n    console.log(`switch to ${checked}`);\n  }\n\n  const onFinish = values => {\n    let getValues = values;\n\n    // const now = `${getValues.startTime._d.getHours()}:${getValues.startTime._d.getMinutes()}`;\n    getValues = {\n      ...values,\n      startTime: date.format(getValues.startTime._d, 'hh:mm'),\n      endTime: date.format(getValues.endTime._d, 'hh:mm'),\n    };\n    onRoutine(getValues);\n  };\n\n  const bellChange = e => {};\n\n  return (\n    <div className=\"NewRoutine\">\n      <h1>\n        + New <br /> Routine\n      </h1>\n      <Form onFinish={onFinish} ref={form}>\n        <Form.Item name=\"routine\">\n          <Input placeholder=\"새 루틴을 추가해주세요\" />\n        </Form.Item>\n        <Form.Item name=\"day\">\n          <Checkbox.Group options={options} onChange={onChange} />\n        </Form.Item>\n\n        <h2>시작 알림</h2>\n        <div className=\"theme\">\n          <div className=\"toggle\">\n            <div className=\"active\">활성화</div>\n            <Form.Item name=\"alram\">\n              <Switch onChange={onChange} />\n            </Form.Item>\n          </div>\n        </div>\n        <div className=\"theme\">\n          <div className=\"time\">시간</div>\n          <Form.Item name=\"startTime\">\n            <TimePicker placeholder=\"Start Time\" format={format} />\n          </Form.Item>\n          <IoIosArrowRoundForward />\n          <Form.Item name=\"endTime\">\n            <TimePicker placeholder=\"End Time\" format={format} />\n          </Form.Item>\n        </div>\n        <div className=\"theme\">\n          <div className=\"frequency\">빈도</div>\n          <span>\n            <Form.Item name=\"frequency\">\n              <Select defaultValue=\"1번 울리기\">\n                <Select value=\"1번 울리기\">1번 울리기</Select>\n                <Select value=\"1분단위로 3번 울리기\">1분단위로 3번 울리기</Select>\n                <Select value=\"5분 간격 3번 울리기\">5분 간격 3번 울리기</Select>\n              </Select>\n            </Form.Item>\n          </span>\n        </div>\n        <h2>타이머 종료 알림</h2>\n        <div className=\"alarm\">\n          <Form.Item name=\"alarmSound\">\n            <Select defaultValue=\"알람 없음\" onChange={onAlarmChange}>\n              <Select value=\"none\">알람 없음</Select>\n              <Select value=\"bell\">벨 소리</Select>\n              <Select value=\"knock\">노크 소리</Select>\n            </Select>\n          </Form.Item>\n        </div>\n        <div className=\"button-wrap\">\n          <button className=\"button\" type=\"reset\">\n            취소\n          </button>\n          <button className=\"button\" type=\"submit\">\n            완료\n          </button>\n        </div>\n      </Form>\n      <audio controls ref={audio} autoplay>\n        <source src=\"\" type=\"audio/mp3\" />\n      </audio>\n    </div>\n  );\n};\n\nexport default NewRoutine;\n","/Users/apple/Desktop/progreser/src/containers/NewRoutineContainer.jsx",[],"/Users/apple/Desktop/progreser/src/modules/newRoutine.js",[],"/Users/apple/Desktop/progreser/src/ModalPortal/MyModal/MyModal.jsx",["93","94"],"/Users/apple/Desktop/progreser/src/ModalPortal/MyModal/components/Modalloaders.jsx",[],{"ruleId":"95","severity":1,"message":"96","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":23},{"ruleId":"95","severity":1,"message":"99","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":25},{"ruleId":"95","severity":1,"message":"100","line":9,"column":7,"nodeType":"97","messageId":"98","endLine":9,"endColumn":14},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"95","severity":1,"message":"105","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"106","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"107","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":18},{"ruleId":"95","severity":1,"message":"108","line":21,"column":8,"nodeType":"97","messageId":"98","endLine":21,"endColumn":15},{"ruleId":"95","severity":1,"message":"108","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":15},{"ruleId":"95","severity":1,"message":"109","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":19},{"ruleId":"95","severity":1,"message":"110","line":14,"column":17,"nodeType":"97","messageId":"98","endLine":14,"endColumn":25},{"ruleId":"95","severity":1,"message":"109","line":1,"column":30,"nodeType":"97","messageId":"98","endLine":1,"endColumn":39},{"ruleId":"95","severity":1,"message":"111","line":12,"column":10,"nodeType":"97","messageId":"98","endLine":12,"endColumn":15},{"ruleId":"95","severity":1,"message":"112","line":15,"column":10,"nodeType":"97","messageId":"98","endLine":15,"endColumn":15},{"ruleId":"95","severity":1,"message":"110","line":15,"column":17,"nodeType":"97","messageId":"98","endLine":15,"endColumn":25},{"ruleId":"95","severity":1,"message":"113","line":35,"column":9,"nodeType":"97","messageId":"98","endLine":35,"endColumn":17},{"ruleId":"95","severity":1,"message":"114","line":65,"column":9,"nodeType":"97","messageId":"98","endLine":65,"endColumn":19},{"ruleId":"95","severity":1,"message":"115","line":6,"column":19,"nodeType":"97","messageId":"98","endLine":6,"endColumn":29},{"ruleId":"95","severity":1,"message":"110","line":7,"column":17,"nodeType":"97","messageId":"98","endLine":7,"endColumn":25},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'ConnectedRouter' is defined but never used.","'history' is assigned a value but never used.","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"'Login' is defined but never used.","'Signup' is defined but never used.","'NewRoutine' is defined but never used.","'MyModal' is defined but never used.","'useEffect' is defined but never used.","'setState' is assigned a value but never used.","'alarm' is assigned a value but never used.","'state' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'bellChange' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]